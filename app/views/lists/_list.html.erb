<style>
.ui-autocomplete-category {
    font-weight: bold;
    padding: .2em .4em;
    margin: .8em 0 .2em;
    line-height: 1.5;
}
</style>

<script>
/*var YWSID = "cpdQ-5t6lIHziB-PIS-eHA";

 $.widget( "custom.catcomplete", $.ui.autocomplete, {
        _renderMenu: function( ul, items ) {
            var that = this,
                currentCategory = "";
            $.each( items, function( index, item ) {
                if ( item.api != currentCategory ) {
                    ul.append( "<li class='ui-autocomplete-category'>" + item.api + "</li>" );
                    currentCategory = item.api;
                }
                that._renderItem( ul, item );
            });
        }
    });



$(function() {

    $('input#item_name').catcomplete({
          	source: function(req, response){

			        $.ajax({
			            url      : 'http://api.yelp.com/business_review_search',
			            dataType : 'jsonp',
			            data     : {term: req.term, location: $("input#item_location_name").val(), limit:10, ywsid:'cpdQ-5t6lIHziB-PIS-eHA'}, // callback is not necessary
			            success  : function(data) {
			                // data is a normal response shown on yelp's API page
			                
			                var restaurantSuggestions = [];
				              $.each(data.businesses, function(i, business){ 
				              	var h = {};
				              	h['label'] = business.name;                   
				              	h['api'] = "Yelp";
				              	h['category'] = business.categories[0].name;
				                restaurantSuggestions.push(h);  
				              });
				              

				              response( $.map( restaurantSuggestions, function( item ) {
				              		return {
				              			label: item.label, api: item.api, category: item.category
				              		}
				                  }
				              	)
				              )

			            }
			        });
			},
			select: function( event, ui ) {
                $('input#item_category_name').val(ui.item.category);
            }
  })
})
*/
</script>

<%= div_for(list, :class => "offset0 span2 row-#{@row}", :style => "border-right-style:solid; border-right-width:1px; border-right-color:#eee; padding-left:20px; padding-right:20px; margin-right:0px; margin-left:0px; height:#{150+ (@max_items.nil? ? 0 : @max_items*60)}px") do %>
			<h4 style="display:inline; margin-bottom:4px;" id="listTitle-<%= dom_id(list) %>"><%= "#{list.title}" %></h4>

			<% if list.user == current_user %>
					<%= link_to '&times;'.html_safe, list, :class => "close", confirm: "Delete list?", method: :delete %>
			<% end %>
			<br />

			<% if @followedlists or @search %>
				(by <%= link_to "#{list.user.firstname} #{list.user.lastname}", user_path(list.user) %>)<br />
			<% end %>

			<% if not list.user == current_user %>
				<% if current_user.listships.where("followlist_id = ?", list.id).exists? %>
					<%= link_to 'unfollow', listship_path(id: list.id), method: :delete, :class => "btn btn-mini", :style => "margin-bottom:6px"  %>
				<% else %>
					<%= link_to 'follow', listships_path(id: list.id), method: :post, :class => "btn btn-mini",:style => "margin-bottom:6px"  %>
				<% end %>
			<% end %>

				<% if list.user == current_user %>
					<%= form_tag url_for(:controller => "lists", :action => "change_privacy", :remote => true), :method => "post", :class => "privacy_form" do %>
					  <%= hidden_field_tag :list_id, list.id %>
				      <%= select_tag :privacy, options_for_select([["public", 0], ["friends", 1], ["private",2]], list.privacy), :style => "width:80px; height:15px; font-size:0.8em; margin-top:5px", :class=>"privacy" %>
				    <% end %>
				<% end %>




		    <% if list.user == current_user %>
				<!-- Button to trigger modal -->
				<a href="#" role="button" class="itemModalButton btn btn-mini btn-primary" data-toggle="modal" style="margin-top:-30px; margin-bottom:0px" id="itemModalButton-<%= dom_id(list) %>">+ item</a>
			<% end %>



			<br />
		<% no_location = list.items.select{|i| !i.location.blank?}.empty? %>
		<% if !no_location %>
			sort by:<br />
			<%= link_to "location", lists_sort_path(id: list.id, sort_by:"location"), :class => "btn btn-mini #{list.sort_by == "location" ? "btn-primary disabled" : ""}", method: :post, :style =>"margin-right:0px" if !no_location %><%= link_to "category",  lists_sort_path(id: list.id, sort_by:"category"), :class => "btn btn-mini #{list.sort_by == "category" ? "btn-primary disabled" : ""}", method: :post %><br /><br />
		<% end %>

			<% @previous = "initial" %>
			<div class="items" id="<%= dom_id(list) %>">
				<% if list.sort_by == "category" %>
	      			<%= render list.items.where("wishlist=?",false).order("category_id ASC") %>
	      			<% if !list.items.where("wishlist=?",true).empty? and list.user == current_user %>
	      				<% @previous = "initial" %>
		      			<hr>
		      			<p style="font-size:0.9em">Your Private Wishlist</p>
		      			<div class="wishlist" id="<%= dom_id(list) %>">
	    	  				<%= render list.items.where("wishlist=?",true).order("category_id ASC") %>
	    	  			</div>
	    	  		<% end %>
	      		<% else %>
	      			<%= render list.items.where("wishlist=?",false).order("location_id ASC") %>
	      			<% if !list.items.where("wishlist=?",true).empty? and list.user == current_user %>
	      				<% @previous = "initial" %>
		      			<hr>
		      			<p style="font-size:0.9em">Your Private Wishlist</p>
		      			<div class="wishlist" id="<%= dom_id(list) %>">
	    	  				<%= render list.items.where("wishlist=?",true).order("location_id ASC") %>
	    	  			</div>
	    	  		<% end %>
	      		<% end %>
		    </div>
<% end %>
